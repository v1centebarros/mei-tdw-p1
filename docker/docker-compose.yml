services:
  minio:
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  keycloak_web:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_web
    environment:
      - KEYCLOAK_DATABASE_HOST=keycloakdb
      - KEYCLOAK_DATABASE_PORT=5432
      - KEYCLOAK_DATABASE_USER=keycloak
      - KEYCLOAK_DATABASE_PASSWORD=password
      - KEYCLOAK_DATABASE_NAME=keycloak
      
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      
    volumes:
      - './keycloak-config/config.json:/opt/keycloak/data/import/odin-realm.json'
      - 'keycloak_data:/bitnami/keycloak'
    command:
      - /bin/bash
      - -c
      - |
        /opt/bitnami/scripts/keycloak/entrypoint.sh /opt/bitnami/scripts/keycloak/run.sh &
        KEYCLOAK_PID=$$!
        echo "Waiting for Keycloak to start..."
        while ! curl --output /dev/null --silent --head --fail http://localhost:8080/; do
          echo "Waiting for Keycloak..."
          sleep 5
        done
        echo "Keycloak is up, starting import..."
        /opt/bitnami/keycloak/bin/kc.sh import --file /opt/keycloak/data/import/odin-realm.json
        
        /opt/bitnami/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080 --realm master --user admin --password admin --config /opt/bitnami/keycloak/keycloakConfig.json
        /opt/bitnami/keycloak/bin/kcadm.sh create roles -r "TDW" -s name="file:read" --config /opt/bitnami/keycloak/keycloakConfig.json
        /opt/bitnami/keycloak/bin/kcadm.sh create roles -r "TDW" -s name="file:write" --config /opt/bitnami/keycloak/keycloakConfig.json

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - keycloakdb
    ports:
      - 4200:8080
    
  keycloakdb:
    image: timescale/timescaledb:latest-pg17
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - './postgresql-init:/docker-entrypoint-initdb.d'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      
      API_DB_NAME: api
      API_DB_USER: api
      API_DB_PASSWORD: password
    
  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    depends_on:
      - keycloak_web
      - keycloakdb
      - minio
    environment:
      # Keycloak settings
      - KEYCLOAK_URL=http://keycloak_web:8080/keycloak
      - KEYCLOAK_REALM=TDW
      - KEYCLOAK_CLIENT_ID=tdw-client
      - KEYCLOAK_CLIENT_SECRET=WnM69tiQwcscM9Ix0f5TXppHOuS917lm
      - KEYCLOAK_ALGORITHM=RS256

      # MinIO settings
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - MINIO_BUCKET_NAME=fastapi-bucket

      # Database settings
      - DB_USER=api
      - DB_PASSWORD=password
      - DB_HOST=keycloakdb
      - DB_PORT=5432
      - DB_NAME=api
    ports:
      - 6969:8000
  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - api
  #     - keycloak_web
  #   environment:
  #     - AUTH_SECRET="i9SqyC7xA1YFNESd3RVITVUPhY/7yKefr+xBFKiP75M="
  #     - AUTH_TRUST_HOST=false
  #     - AUTH_URL=http://localhost/api/auth

  #     - AUTH_KEYCLOAK_ID=tdw-client
  #     - AUTH_KEYCLOAK_SECRET=WnM69tiQwcscM9Ix0f5TXppHOuS917lm
  #     - AUTH_KEYCLOAK_ISSUER=http://localhost/keycloak/realms/TDW
  #   network_mode: host
  # nginx:
  #   image: nginx:alpine
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #     - api
  #   network_mode: host

volumes:
  postgres_data:
  minio_data: