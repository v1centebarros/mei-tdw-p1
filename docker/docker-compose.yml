services:
  minio:
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  keycloak_web:
    image: bitnami/keycloak
    container_name: keycloak_web
    environment:
      - KEYCLOAK_DATABASE_HOST=keycloakdb
      - KEYCLOAK_DATABASE_PORT=5432
      - KEYCLOAK_DATABASE_USER=keycloak
      - KEYCLOAK_DATABASE_PASSWORD=password
      - KEYCLOAK_DATABASE_NAME=keycloak
      
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - './keycloak-config/config.json:/opt/keycloak/data/import/odin-realm.json'
      - 'keycloak_data:/bitnami/keycloak'
    command:
      - /bin/bash
      - -c
      - |
        /opt/bitnami/scripts/keycloak/entrypoint.sh /opt/bitnami/scripts/keycloak/run.sh &
        KEYCLOAK_PID=$$!
        echo "Waiting for Keycloak to start..."
        while ! curl --output /dev/null --silent --head --fail http://localhost:8080/; do
          echo "Waiting for Keycloak..."
          sleep 5
        done
        echo "Keycloak is up, starting import..."
        /opt/bitnami/keycloak/bin/kc.sh import --file /opt/keycloak/data/import/odin-realm.json
        
        /opt/bitnami/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080 --realm master --user admin --password admin --config /opt/bitnami/keycloak/keycloakConfig.json
        /opt/bitnami/keycloak/bin/kcadm.sh create roles -r "TDW" -s name="file:read" --config /opt/bitnami/keycloak/keycloakConfig.json
        /opt/bitnami/keycloak/bin/kcadm.sh create roles -r "TDW" -s name="file:write" --config /opt/bitnami/keycloak/keycloakConfig.json

        
        wait $$KEYCLOAK_PID
    depends_on:
      - keycloakdb
    ports:
      - 8080:8080

  keycloakdb:
    image: postgres:alpine
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - './postgresql-init:/docker-entrypoint-initdb.d'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      
      API_DB_NAME: api
      API_DB_USER: api
      API_DB_PASSWORD: password
      
      
      
  tika:
    image: apache/tika
    ports:
      - "9998:9998"

volumes:
  keycloak_data:
  postgres_data:
  minio_data:
