[
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web <mark>Application Security Project                                |\n| PCI DSS - Paymen</mark>t Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 0
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                          <mark>                        | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                         </mark>                         | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 1
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .     <mark>                  | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . .</mark> . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 2
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . .<mark> . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testi</mark>ng methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 3
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifica<mark>tions extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n</mark><!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 4
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .<mark> . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                              </mark>              |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 5
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                               <mark>                                                                                 | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</mark>                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 6
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- imag<mark>e -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . </mark>. . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 7
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Eramba\n\nMiguel Francisco Duarte Pinheiro Ramos Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a so<mark>lution to fix vulnerabilities found. Additionally, due to the COVID-19 pa</mark>ndemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 8
  },
  {
    "file_id": "64a9972464994c4d948a0ddf0ca167f0",
    "filename": "out.pdf",
    "content_type": "application/pdf",
    "content_preview": "## UNIVERSIDADE DE LISBOA FACULDADE DE CIÊNCIAS DEPARTAMENTO DE INFORMÁTICA\n\n<!-- image -->\n\n## Hardening an Open-Source Governance Risk and Compliance Software: Er<mark>amba\n\nMiguel Francisco Duarte Pinheiro Ramos </mark>Chaves\n\nMESTRADO EM SEGURANÇA INFORMÁTICA\n\nDissertação orientada por:\n\nProf. Doutor Mário João Barata Calha\n\n<!-- image -->\n\n## Acknowledgments\n\nFirst of all, I would like to thank my brother Francisco, mother Deolinda, father Francisco and grandfather Manuel for guiding me through life.\n\nTo Doctor Domingos Coiteiro, Doctor Nuno Simas and the whole team of neurosurgery of Hospital Santa Maria for saving my life in 2015.\n\nA huge thank you to my girlfriend Matilde for motivating me this year to reach my goals through love, strength, patience, support, determination, and encouragement.\n\nI would like to express my gratitude to Professor Mário Calha. More than being my counsellor, Professor guided and inspired this project by giving relevant advice, observations and always being available to help and contribute to this project's success.\n\nThank you to all my friends from Faculdade de Ciências da Universidade de Lisboa especially Rui Pereira, Francisco Castel-Branco, Gonçalo Miranda and Daniel Pires.\n\nThank you to André, Sebastião, Rafael and Little Tooth.\n\nThanks to André Ginja and Paulo Rugeiro.\n\nThank you to all my friends from Saint Cross. Thank you to Tomás Bastos, my dude and my sidekick. Thank you to all my friends from Colégio Manuel Bernardes.\n\nFrom EY, huge thanks to everyone from the Cybersecurity team, especially to Ricardo Dionísio for guiding me on this project and giving me the liberty to follow the path of the project as I wanted; thank you to Rita Cunha; Sérgio Sá; Manuel Oliveira; José Rafael Monteiro and Pedro Monzelo for giving me the motivation and time to work on this project despite everything being on fire every day.\n\n<!-- image -->\n\n## Resumo\n\nLições históricas como Chernobyl, Fukushima ou o colapso da ponte de Mississípi revelam a vital importância da gestão de risco. Para além de saber gerir o risco, as empresas têm de desenvolver planos para se precaverem e oferecerem resiliência a qualquer ameaça que possam enfrentar, desde desastres naturais e terrorismo a ciberataques e propagação de vírus. Estes planos são denominados de planos de continuidade de negócio. A crucialidade destes planos e a introdução de novas leis como Lei Sarbanes-Oxley, Diretiva Europeia 2006/43/EC VIII e recentemente do Regulamento de Protecção de Dados geraram uma maior preocupação e sensibilidade nas empresas em aglomerar todos estes processos de governança, risco e conformidade ( GRC ). GRC integra a implementação da gestão de risco, planos de continuidade de negócio, conformidade com as leis e boas práticas de auditoria externa e interna. As empresas necessitam de uma ferramenta que ofereça uma visão global da Governança, Risco e Conformidade. No entanto, estas ferramentas são por norma dispendiosas, o que faz com que pequenas e médias empresas não tenham meios para suportar o custo. Consequentemente, estas empresas tendem a adoptar ferramentas de código aberto, como SimpleRisk, Envelop ou Eramba. Apesar de suportarem o GRC , existem vários problemas com as aplicações deste tipo, como a falta de manutenção, problemas de migração, dificuldade de escalabilidade, a necessidade constante de fazer atualizações e a grande curva de aprendizagem associada.\n\nA Ernst & Young agora conhecida como EY oferece serviços de Consulting , Assurance , Tax e de Strategy and Transaction para ajudar a resolver desafios mais difíceis dos seus clientes e criar valor. Para se preparar para uma futura auditoria, um cliente da EY pertencente ao sector bancário procura ser certificado em ISO/IEC 27001 e ISO/IEC 22301, referentes a Sistema de Gestão de Segurança de Informação (SGSI) e Sistema de Gestão de Continuidade de Negócio (SGCN), respectivamente. Adicionalmente, o cliente visa migrar a sua infraestrutura no local para uma infraestrutura na cloud. Com todos estes fatores em conta, a EY recomendou uma ferramenta de código aberto de GRC chamada Eramba.\n\nEsta tese propõe um estudo profundo das vulnerabilidades que o Eramba pode oferecer assim como uma solução para as resolver através de armazenamento em nuvem. Seguindo uma metodologia de pentesting chamada PTES para o estudo de vulnerabilidades foi possível identificar dez vulnerabilidades sendo quase todas de baixo nível. A metodologia PTES recomenda o uso de adoção de modelo de ameaças de modo a perceber como os processos estão correlacionados, onde estão armazenados dados importantes, quais são os principais ativos e como é processado um pedido na aplicação. Para fazer esta modelação foi seguido uma metodologia proposta pela Microsoft\n\nnomeada de STRIDE, esta metodologia é uma mnemónica para Spoofing , Tampering , Repudiation , Information Disclosure , Denial of Service e Elevation of Privilege . A Microsoft propõe um modelo de ameaças em quatro passos: modelação do sistema através de Data Flow Diagrams ; encontrar ameaças e consequentemente classificá-las através da nomenclatura STRIDE; endereçar ameaças mitigando e eliminando-as e validar se cada uma foi realmente endereçada com sucesso. De modo a endereçar estes dois últimos passos e para conjugar com os requisitos da empresa de migração para armazenamento na nuvem foi desenvolvido uma solução de tornar o Eramba num container para então usufruir da orquestração de containers que é o Kubernetes . Como resultado, a partir do trabalho desenvolvido é possível que qualquer organização adapte esta solução de GRC e consiga hospedar na nuvem sem enfrentar dificuldades. Este trabalho proporcionou analisar a viabilidade da ferramenta Eramba a longo prazo por qualquer organização e perceber se este é escalável.\n\n<!-- image -->\n\n## Abstract\n\nHistorical lessons such as Chernobyl, Fukushima or the collapse of the Mississippi bridge showcase the vital importance of risk management. In addition to managing risk, companies must develop plans to safeguard against and offer resilience to any threat they may face, from natural disasters and terrorism to cyber-attacks and the spread of viruses. These plans are called business continuity plans. The cruciality of these plans and the introduction of new laws such as the Sarbanes-Oxley Act, European Directive 2006/43/EC VIII and recently the Data Protection Regulation have generated greater concern and sensitivity in companies, leading them to agglomerate all these governance, risk and compliance processes (GRC). GRC integrates the implementation of risk management, business continuity plans, law compliance and good external and internal auditory practices. Companies need a tool that provides an overall view of Governance, Risk and Compliance. However, such tools are usually expensive, which means that small and mediumsized companies cannot afford the cost. Consequently, these companies tend to adopt open source tools such as SimpleRisk, Envelop or Eramba. Despite being compliant with GRC, there are several problems with applications of this type, such as lack of maintenance, migration problems, difficulty in scalability, the constant need to make updates and the large learning curve associated.\n\nErnst & Young now known as EY offers Consulting, Assurance, Tax and Strategy and Transaction services to help solve more difficult challenges for its clients and create value. To prepare for a future audit, an EY client within the banking sector seeks to be certified in Business Continuity and Information Security. Additionally, the client aims to migrate its onsite infrastructure to a cloud infrastructure. With all these factors in mind, EY has recommended an open source tool called Eramba.\n\nThis thesis proposes an in-depth study of the vulnerabilities that Eramba can face as well as a solution to solve them through cloud storage. Following a pentesting methodology called PTES for the study of vulnerabilities it was possible to identify ten vulnerabilities, almost all of which are low level. The PTES methodology recommends the use of a threat model in order to understand how processes are correlated, where important data are stored, what are the main assets and how a request is processed in the application. To make this modeling was followed a methodology proposed by Microsoft named STRIDE, this methodology is a mnemonic for Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service and Elevation of Privilege. Microsoft proposes a four-step threat model: modeling the system through Data Flow Diagrams; finding threats and consequently classifying them through STRIDE nomenclature; addressing threats by\n\nmitigating and reducing them and validating whether each one has actually been successfully addressed. In order to address these last two steps and to combine them with the company's requirements for migration to cloud storage, a solution has been developed to turn Eramba into a container to then make use of orchestration that is the Kubernetes. As a result, from the work done it is possible for any organization that is an EY customer to adapt this solution and be able to host in the cloud without facing difficulties. This project also provided an overview to analyze if Eramba is secure and scalable.\n\n<!-- image -->\n\n<!-- image -->\n\n## Contents\n\n| List of Figures   | List of Figures                                                                                              | List of Figures                                                                                                                                          | xi   |\n|-------------------|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|------|\n| List of Tables    | List of Tables                                                                                               | List of Tables                                                                                                                                           | xiii |\n| List of Acronyms  | List of Acronyms                                                                                             | List of Acronyms                                                                                                                                         | xv   |\n| 1 Introduction    | 1 Introduction                                                                                               | 1 Introduction                                                                                                                                           | 1    |\n| 1.1               | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                       | Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                   | 1    |\n| 1.2               |                                                                                                              | Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                              | 4    |\n|                   |                                                                                                              | . . . . .                                                                                                                                                |      |\n| 1.3               |                                                                                                              | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                    | 4    |\n| 1.4 1.5           | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Contributions . . . . . Document Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                             | 5    |\n| 2 Related Work    | 2 Related Work                                                                                               | 2 Related Work                                                                                                                                           | 7    |\n| 2.1               | An overview of Pentesting . . . . . . . . . . . . . . . . . . . . . . .                                      | . . . . . .                                                                                                                                              | 7    |\n| 2.2               | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Pentesting Methodologies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 8    |\n| 2.2               | 2.2.1                                                                                                        | Penetration Testing Execution Standard (PTES) . . . . . . . . . . . . . .                                                                                | 8    |\n| 2.2               | 2.2.2                                                                                                        | Federal Risk and Authorization Management Program Penetration Test (FEDRAMP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             | 10   |\n|                   | 2.2.3                                                                                                        | Council for Registered Ethical Security Testers (CREST) Penetration Test                                                                                 | 13   |\n|                   | 2.2.5                                                                                                        | Testing Guide . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Chosen methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 14   |\n| 2.3               | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                              | Most common Attacks in Web Applications . . . . . . . . . . . . . . . . . . . .                                                                          | 16   |\n| 2.4               | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                         | Laws and Regulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                     | 18   |\n| 2.4               |                                                                                                              | Sarbanes-Oxley-Act . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                               | 18   |\n| 2.4               | 2.4.1                                                                                                        |                                                                                                                                                          |      |\n| 2.4               | 2.4.2                                                                                                        | European directive 2006/43/EC VIII . . . . . . . . . . . . . . . . . . . .                                                                               | 19   |\n|                   | 2.4.3 General Data Protection Regulation . . .                                                               | . . . . . . . . . . . . . . . . .                                                                                                                        | 19   |\n| 2.5               | Governance Risk and Compliance . . . . . . . . . . . .                                                       | . . . . . . . . . . . . .                                                                                                                                | 20   |\n| 2.6               | Eramba . . .                                                                                                 | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                  | 22   |\n| 2.7               | Threat modelling .                                                                                           | . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                                        | 24   |\n| 2.8               | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          | Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                                                                      | 25   |\n\n|                                                                             | 2.8.1                                                                                  | Requirements for Cloud Computing Architecture . . . . . . . . . . . . .                 |   28 |\n|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------|\n| 2.9                                                                         | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Containers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   29 |\n|                                                                             | 2.9.1                                                                                  | Docker . . . . . . . . . . . . . . . . . . . . . . . . .                                |   30 |\n|                                                                             | 2.9.2                                                                                  | Container registries . . . . . . . . . . . . . . . . . . . . . . . . . . . . .          |   31 |\n|                                                                             | 2.9.3                                                                                  | Container Orchestration . . . . . . . . . . . . . . . .                                 |   32 |\n| 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            | 2.10 Kubernetes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             |   32 |\n| Eramba Solution Analysis                                                    | Eramba Solution Analysis                                                               | Eramba Solution Analysis                                                                |   37 |\n| 3.1                                                                         | Eramba threat model . . . . .                                                          | . . . . . . . . . . . . . . . . .                                                       |   38 |\n| 3.2                                                                         | Vulnerabilities Analysis and Exploitation                                              | . . . . . . . . . . .                                                                   |   43 |\n|                                                                             | 3.2.1                                                                                  | Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            |   43 |\n|                                                                             | 3.2.2                                                                                  | Address Resolution Protocol (ARP) Spoofing . . . . . . . . . . . . . . .                |   45 |\n|                                                                             | 3.2.3                                                                                  | Session Hijacking . . . . . . . . . . . . . . . . . . .                                 |   47 |\n|                                                                             | 3.2.4                                                                                  | Unencrypted Communication . . . . . . . . . . . . .                                     |   47 |\n|                                                                             | 3.2.5                                                                                  | Cross-site Request Forgery . . . . . . . . . . . . . . . . . . . . . . . . .            |   48 |\n|                                                                             | 3.2.6                                                                                  | Use of components with known vulnerabilities . . . .                                    |   48 |\n|                                                                             | 3.2.7                                                                                  | Excessive administrator privileges . . . . . . . . . . . . . . . . . . . . .            |   51 |\n|                                                                             | 3.2.8                                                                                  | Weak Cryptographic Algorithm . . . . . . . . . . . .                                    |   51 |\n|                                                                             | 3.2.9                                                                                  | Denial of Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           |   52 |\n|                                                                             | 3.2.10                                                                                 | Password Field automatic . . . . . . . . . . . . . . .                                  |   53 |\n| 3.3                                                                         | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                      | Post-exploitation . . . . . . . . . . . . . . . . . . . . . . . .                       |   54 |\n| Eramba Cloud Solution                                                       | Eramba Cloud Solution                                                                  | Eramba Cloud Solution                                                                   |   57 |\n| 4.1                                                                         | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                       | Requirements Gathering . . . . . . . . . . . . . . . . . . . . .                        |   57 |\n| 4.2                                                                         | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Eramba Container . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   58 |\n| 4.3                                                                         | Architecture of Eramba as Service . . . . . . .                                        | . . . . . . . .                                                                         |   59 |\n|                                                                             | 4.3.1                                                                                  | Google Kubernetes Engine . . . . . . . . . . . . . . . . . . . . . . . . .              |   59 |\n|                                                                             | 4.3.2                                                                                  | Google VPC network . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   60 |\n|                                                                             | 4.3.3                                                                                  | Google Load Balancer . . . . . . . . . . . . . . . . .                                  |   61 |\n|                                                                             | 4.3.4                                                                                  | Google Custom Resource ManagedCertificate . . . . . . . . . . . . . . .                 |   61 |\n|                                                                             | 4.3.5                                                                                  | Google Cloud Armor . . . . . . . . . . . . . . . . . . . . . . . . . . . .              |   61 |\n|                                                                             | 4.3.6                                                                                  | Container Optimized Images (COOS) . . . . . . . . . . . . . . . . . . .                 |   62 |\n|                                                                             | 4.3.7                                                                                  | Cloud Identify Access Management (IAM) . . . . . .                                      |   62 |\n|                                                                             | 4.3.8                                                                                  | Security Command Center . . . . . . . . . . . . . . . . . . . . . . . . .               |   62 |\n|                                                                             | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .      | 4.3.9 Architecture Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .       |   62 |\n| 4.4                                                                         | Kubernetes Solution Design                                                             | . . . . . . . . . . . . . . . . . .                                                     |   64 |\n| 4.5                                                                         | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   | Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |   64 |\n| 4.6                                                                         |                                                                                        | Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   65 |\n| 4.7                                                                         | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . | Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   66 |\n\n| 5            | Conclusion and Future Work                                                            |   69 |\n|--------------|---------------------------------------------------------------------------------------|------|\n| 5.1          | Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   69 |\n| 5.2          | Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |   70 |\n| Bibliography | Bibliography                                                                          |   75 |\n|              | A Eramba modules and functionalities                                                  |   77 |\n|              | B Eramba Dockerfile                                                                   |   81 |\n|              | C Eramba Kubernetes Solution                                                          |   83 |\n\n<!-- image -->\n\n<!-- image -->\n\n## List of Figures\n\n| 1.1   | Work Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |   5 |\n|-------|-----------------------------------------------------------------------------------------|-----|\n| 2.1   | Penetration Testing Execution Standard. . . . . . . . . . . . . . . . . . . . . . .     |  10 |\n| 2.2   | FEDRAMP Penetration Testing. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  13 |\n| 2.3   | CREST Penetration testing framework. . . . . . . . . . . . . . . . . . . . . . .        |  14 |\n| 2.4   | PCI DSS Penetration testing framework. . . . . . . . . . . . . . . . . . . . . .        |  15 |\n| 2.5   | Forrester Wave chart for Enterprise Governance, Risk and Compliance Platforms.          |  21 |\n| 2.6   | Eramba Problems and Solutions [19]. . . . . . . . . . . . . . . . . . . . . . . .       |  23 |\n| 2.7   | Data Flow Diagram Elements. . . . . . . . . . . . . . . . . . . . . . . . . . . .       |  25 |\n| 2.8   | Cloud Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  28 |\n| 3.1   | Threat Model. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   |  39 |\n| 3.2   | Eramba Model View Controller. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  40 |\n| 3.3   | Authentication Process [20]. . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  42 |\n| 3.4   | Brute force attack results using Burp Intruder. . . . . . . . . . . . . . . . . . . .   |  44 |\n| 3.5   | HTTP header that show the requests from the client IP to the Eramba host. . . . .       |  45 |\n| 3.6   | Log in request from client to Eramba host. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.7   | Packet that show the login was successful. . . . . . . . . . . . . . . . . . . . .      |  46 |\n| 3.8   | SYN Flood Attack. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  53 |\n| 4.1   | Eramba containerized. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  59 |\n| 4.2   | Eramba Kubernetes Solution architecture. . . . . . . . . . . . . . . . . . . . . .      |  63 |\n| 4.3   | Google Cloud Cost per day. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .    |  67 |\n| 4.4   | Google PageSpeed report results . . . . . . . . . . . . . . . . . . . . . . . . . .     |  68 |\n| A.1   | Organization Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |  77 |\n| A.2   | Risk Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .        |  77 |\n| A.3   | Asset Management Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .       |  78 |\n| A.4   | Control Catalogue Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .      |  78 |\n| A.5   | Compliance Management Module [19]. . . . . . . . . . . . . . . . . . . . . . .          |  79 |\n| A.6   | Security Operation Module [19]. . . . . . . . . . . . . . . . . . . . . . . . . . .     |  79 |\n\n<!-- image -->\n\n## List of Tables\n\n| 2.1   | Penetration Testing methodologies . . . . . . . . . . . . . . . . . . . . . . . . .   |   16 |\n|-------|---------------------------------------------------------------------------------------|------|\n| 2.2   | Containers versus Virtual Machines [22]. . . . . . . . . . . . . . . . . . . . . .    |   29 |\n| 3.1   | STRIDE-per-Element. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     |   38 |\n| 3.2   | STRIDE securities properties violated. . . . . . . . . . . . . . . . . . . . . . . .  |   43 |\n| 3.3   | STRIDE iteration result. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   54 |\n| 3.4   | STRIDE Threats and Countermeasures mapped with Cloud Services. . . . . . . .          |   55 |\n| 4.1   | Requirements Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  |   58 |\n| 4.2   | Mapping Google Cloud features with Vulnerabilities found. . . . . . . . . . . . .     |   65 |\n| 4.3   | Mapping Google Cloud features with requirements met. . . . . . . . . . . . . . .      |   66 |\n| A.1   | Eramba specifications extracted from Basic GRC relationships [19]. . . . . . . .      |   80 |\n\n<!-- image -->\n\n## List of Acronyms\n\n| ARP - Address Resolution Protocol                                            |\n|------------------------------------------------------------------------------|\n| COSO - Committee of Sponsoring Organizations of the Treadway Commission      |\n| CREST - Council for Registered Ethical Security Testers                      |\n| CSP - Cloud Service Provider                                                 |\n| CSRF - Cross-site Request Forgery                                            |\n| CVE - Common Vulnerabilities and Exposures                                   |\n| DNS - Domain Name System                                                     |\n| DoS - Denial of Service                                                      |\n| EY - Ernst and Young                                                         |\n| FEDRAMP - Federal Risk and Authorization Management Program Penetration Test |\n| GDPR - General Data Protection Regulation                                    |\n| GKE - Google Kubernetes Engine                                               |\n| GRC - Governance Risk and Compliance                                         |\n| IAM - Identify Access Management                                             |\n| IDS - Intrusion Detection System                                             |\n| ISMS - Information Security Management Systems                               |\n| ITIL - Information Technology Infrastructure Library                         |\n| IT - Information Technology                                                  |\n| JSON - JavaScript Object Notation                                            |\n| NHS - National Health Service                                                |\n| NIST - National Institute of Standards and Technology                        |\n| OCEG - Open Compliance and Ethics Groups                                     |\n| OS - Operating System                                                        |\n| OWASP - Open Web Application Security Project                                |\n| PCI DSS - Payment Card Industry Data Security Standard                       |\n| - Penetration Testing Execution Standard                                     |\n| PTES                                                                         |\n| SEC - Securities and Exchange Commission                                     |\n| SLA - Service Level Agreements                                               |\n| SOX - Sarbanes-Oxley Act SSL - Secure Sockets Layer                          |\n| TLS - Transport Layer Security                                               |\n| VPC - Virtual Private Cloud                                                  |\n| WAF - Web Application Firewall                                               |\n\n<!-- image -->\n\n## Chapter 1\n\n## Introduction\n\n## 1.1 Motivation\n\nIn business, every decision becomes a potential risk and making the right one is what drives progress.\n\nIf a driver is approaching a yellow light he must choose if he goes through or not. By going through he has to accelerate, risking an accident or a fine. Every time a farmer plants corn he is facing the risk that the corn may not grow due to a drought or that there will not be demand for it. Day after day, companies' headquarters are in physical risk, as fire or gas explosions are a common hazard that can happen to a building. However, enterprises often have prevention plans to mitigate the occurrence of these risks such as fire-extinguishers and emergency exit plans.\n\nConsidering that risk can be described as the effect of uncertainty on objectives [34], calculating risk is not an exact science.\n\nConsequently, to properly handle risk, managers must identify, analyse and control threats to the organization's capital and earnings, in order to then implement risk-reducing actions and assess how risk changes over time. This is risk management. Taking into account this paradigm, risk management plays a vital role in protecting an organization's assets [53].\n\nNew regulations, cultures and values of organizational life demand for systematic risk assessment and competent management, since managing liability is a challenging and continuous process within any organization.\n\nSince the mid-1990s, risk management underwent a dramatic expansion [62][58]. If before it was regarded simply as a field of management control, risk management gained momentum as it became a tool for companies to benchmark. History lessons such as Chernobyl [77], Fukushima [2] and the Mississippi River Bridge Collapse [52] are some of many events that could have been mitigated if there had been proper, well-established risk management. Terrorism, cyberattacks, power outage and network failures frequently cause more harm than expected due to the lack of a risk management plan. For example, in 2017, National Health Service in the United Kingdom was hit by WannaCry [26], a global ransomware attack that caused more than 19,000 appointments and surgeries to be cancelled. The Department of Health had previously developed a plan to respond\n\nto cyber-attacks, however, as it had never been tested before, it was not clear how to proceed and what actions should be taken (see Investigation:WannaCry cyber attack and the NHS [26]).\n\nOn the other hand, in 2013, the offices of Cantey Technology, an IT company that hosts servers for more than two hundred clients, were caught on fire due to a lightning strike [71]. Every cable and piece of hardware was destroyed, yet their clients did not notice any difference in the service provided. This is because five years before the fire, Cantey had decided to implement a business continuity plan and move all of their clients' servers to a remote datacenter with continuous backup.\n\nThese past happenings, the intensification of auditing and control processes are the blueprints of what risk management is today.\n\nIn addition to risk management, Governance Risk and Compliance (GRC) have a substantial role in protecting company assets [25].\n\nThe Open Compliance and Ethics Group (OCEG) defines Governance Risk and Compliance as \"a capability to reliably achieve objectives (governance) while addressing uncertainty (risk management) and acting with integrity (compliance)' [4].\n\nGovernance describes the establishment of policies and the continuous monitoring of their implementation, setting the background for risk management. Compliance guarantees that the organization meets the requirements of the boundaries established in organizational values, policies and legal requirements.\n\nWith the emergence of recent internal and external factors such as government reforms SarbanesOxley Act [78], European directive 2006/43/EC VIII [21] and General Data Protection Regulation [56], GRC has become considerably relevant and continues to move up priority-wise in the industry's agenda. As a result of these legislation, society is more risk-averse than ever [65].\n\nTherefore, decision-making skills are pivotal to thrive and improve better deployment. GRC systems are a need for the business community, as they supply essential tools for continuous growth, wise decision-making and better understanding of the full scope of risk [25].\n\nAccording to OCEG latest GRC Maturity Survey [4], organizations that fail to fully integrate GRCfunctions consequently struggle to remain aware of the full scope of embedded risk. The survey also reports that the GRC Maturity level is below the recommended, since companies overlook the efficiency of skillfully integrated risk management, business continuity and compliance.\n\nDue to the necessary legal requirements established by the recent government reforms, frequent human intervention is required for the systems to be fully compliant and have effective controls and policies [7]. Nevertheless, this current process is resource-consuming and fails to accommodate new needs that may arise from market trends.\n\nThe primary intent of GRC systems is to maintain sensitive data, automate risk management across the organization and communicate the organization's risk posture to internal and external groups.\n\nThe latest Forrest Waver report [49] displays a chart for enterprise governance, risk and com-\n\npliance platforms. This chart is based on who has the strongest strategy as well as the strongest current offering, displaying market leaders and their differences.\n\nRecently, Gartner also published a magic quadrant [6] for enterprise governance, risk and compliance platforms. This quadrant is based on the quality of risk, audit, compliance, policy and regulatory management. The quadrant also displays who the market leaders are and how they distinguish from one another.\n\nSince GRC platforms are the basis of risk management and business continuity, they are a need of the current market.\n\nForrest Waver and Gartner's leaders have tools and technology that are able to fully identify risks across the organization while offering enhanced compliance training, strategic company levels, awareness programs and highly detailed reports. However, they are costly and some companies cannot afford them.\n\nSmall and medium-sized enterprises tend to adopt open-source software due to its lower cost and price-value ratio. Additionally, companies with higher budgets, tend to adopt open-source software for then do a post-analysis of their methodologies and verify which software suits them the most. Systems such as Eramba, Simple Risk, Envelop are examples of the long-established open-source software used by these companies. However, open-source software bears various issues such as lack of maintenance, difficult scalability, constant need for updates and the high learning curve associated.\n\nThese various software usually require external security vulnerability assessments also known as pentesting. Pentest is a methodology with the purpose to circumventing the security function of a system [16]. It aims to find security weaknesses that may be exploited or not at some extent. Additionally, these pieces software consume plenty of resources and does not tend to offer any portability or scalability as their normal setup is done via a virtual machine.\n\nEY (Ernst & Young) is one of the largest professional services networks in the world. It offers the expertise to capitalize and grow clients' business through four services lines - assurance, consulting, tax and transaction advisory services. EY Portugal also assists clients in providing a methodology along with recommended technologies.\n\nTo prepare for a forthcoming audit, a client requested EY advisory services. Due to privacy reasons its name will remain confidential and will be treated as 'organization'. The organization belongs to the banking sector and handles millions of dollars per day. This organization plays a crucial role in the economy, so it is important that its operations are resilient and that the effects of any disruptions in its services are minimised, to maintain confidence in the financial system and the satisfaction of customers, shareholders and other stakeholders. As a bank, there are innumerable critical processes for the business. These processes host numerous applications used by millions of people daily across the globe. Some of these applications use legacy technologies which handle sensitive and personal data. Therefore, it is necessary to administer these technologies in a subtle approach. Currently, the organization seeks to be certified in Information Security and Business Continuity for a specific bank process. Additionally, this organization also aims to migrate its\n\ninfrastructure from on-premises to cloud computing and wants to start with a minor application.\n\nBesides EY being a Big4 (alongside with KPMG, PwC and Deloitte) and having an extensive client portfolio, EY aims to provide a GRC solution accessible to everyone so that this solution can be tested, and improve EY's GRC processes with external support.\n\nEYPortugal for this particular client, endorsed an open-source software, Eramba, as their main GRC solution, since it accommodates all sorts of client's needs for a fraction of the leaders' cost.\n\nHowever, given the limitation of open source software of these sort, the questions arose: How secure is Eramba? How could Eramba be scalable in the future in case needed? These questions will make the scope of this project.\n\n## 1.2 Goals\n\nThe role of governance risk and compliance is not truly achieved without having a proper and secure software to manage it. This project's main goals are to perform a penetration test to further asses the security of said software and then provide solutions to increase it.\n\nOverall, the goals of the proposed solution are:\n\n- · Assess vulnerabilities of Eramba.\n- · Exploit those vulnerabilities in a controlled environment.\n- · Supply patches/fixes for those vulnerabilities.\n- · Analyse feasible solutions for those vulnerabilities, including for on-premises and cloud environments.\n\nAdditionally, there is also a need for Information Security of the tool itself, as Eramba contains plenty confidential information of an organization. This information may range from critical assets, vulnerabilities, and implemented controls.\n\n## 1.3 Work Plan\n\nThe purpose of this section is to outline what the work plan for this dissertation is and is described on Figure 1.1.\n\nFigure 1.1: Work Plan\n\n<!-- image -->\n\nThe work done was divergent of the work planned. The work planned was related to the development and programming of new features in Eramba. In contrast, the scope of work elaborated on security components of Eramba created a solution to fix vulnerabilities found. Additionally, due to the COVID-19 pandemic, the thesis's delivery and its deadline were postponed for two months.\n\n## 1.4 Contributions\n\nThe contributions of the developed work are:\n\n- · Vulnerabilities were mitigated in line with the client's requests.\n- · A new Eramba setup was developed.\n- · An automated Eramba deployment was provided in the cloud environment.\n- · The foundation for a future Eramba-as-a-Service was established.\n\n## 1.5 Document Structure\n\nThe remainder of the document is structured in the following sections:\n\n- · Chapter 2 - Related Work - all the work studied that led the solution proposed.\n- · Chapter 3 - Vulnerability Analysis of Eramba - the vulnerabilities found on Eramba and their exploitation.\n- · Chapter 4 - Eramba-as-a-Service - the establishment of an Eramba-as-a-Service solution.\n- · Chapter 5 - Conclusion and Future Work.\n\n<!-- image -->",
    "rank": 9
  }
]